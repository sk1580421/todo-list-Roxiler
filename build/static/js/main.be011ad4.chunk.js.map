{"version":3,"sources":["ToDo.js","Userdetail.js","App.js","index.js"],"names":["ToDo","lists","info","columns","Object","keys","console","log","className","cellPadding","cellSpacing","map","row","slice","length","column","completed","onClick","userId","title","id","Userdetail","detail","todoid","name","email","App","useState","q","setQ","setList","setDetail","setID","setTitle","details","setDetails","fetchTodoList","a","fetch","response","json","useEffect","rows","fetchUserDetails","fontSize","style","color","type","placeholder","value","onChange","e","target","filter","toLowerCase","indexOf","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be011ad4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './todo.css'\r\n\r\n\r\n\r\nfunction ToDo({ lists, info }) {\r\n\r\n\r\n\r\n    const columns = lists[0] && Object.keys(lists[0]);\r\n    console.log(columns)\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"todolist\">\r\n            {/* <div className=\"searchbar\">\r\n\r\n                <SearchIcon fontSize=\"large\" style={{ color: \"black\" }} />\r\n\r\n            </div> */}\r\n            <div className=\"todolistheader\">\r\n                <h3>ToDo ID</h3>\r\n                <h3>Title</h3>\r\n                <h3>Status</h3>\r\n                <h3>Action</h3>\r\n            </div>\r\n            <hr />\r\n            <div className=\"todolistrows\" >\r\n\r\n\r\n                <table cellPadding={10} cellSpacing={10}  >\r\n                    <tbody>\r\n                        {lists.map(row => <tr>\r\n\r\n                            {columns.slice(1, columns.length - 1).map((column) =>\r\n                                < td >\r\n                                    {\r\n                                        row[column]\r\n\r\n\r\n                                    }\r\n\r\n                                </td>)}\r\n\r\n                            {row.completed ? \"complete\" : \"Incomplete\"}\r\n\r\n                            <button onClick={() => info([row.userId, row.title, row.id])}>View User</button>\r\n                        </tr>)}\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n                {/* {lists.map((list) =>\r\n                    <TodoListRow key={list.id} {...list} info={info} />\r\n\r\n                )} */}\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default ToDo\r\n","import React from 'react'\r\nimport './userdetail.css';\r\n\r\nfunction Userdetail({ detail, title, todoid }) {\r\n\r\n\r\n    return (\r\n        <div className=\"userdetails\">\r\n            <h1>User Detail : </h1>\r\n\r\n            <div className=\"userinfo\">\r\n                `<h2> Todo ID : : {todoid} </h2>  `\r\n                <hr />\r\n                `<h2>Todo Title : :  {title}</h2>  `\r\n                <hr />\r\n                `<h2>User ID : : {detail.id} </h2>`\r\n                <hr />\r\n                `<h2>User Name : : {detail.name}</h2>  `\r\n                <hr />\r\n                `<h2>Email : : {detail.email}</h2>  `\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Userdetail\r\n","import React, { useState, useEffect } from 'react'\nimport ToDo from './ToDo'\nimport Userdetail from './Userdetail'\nimport './App.css'\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst url = \"https://jsonplaceholder.typicode.com/todos\";\n\nconst url_1 = \"https://jsonplaceholder.typicode.com/users\";\n\nfunction App() {\n\n  const [q, setQ] = useState(\"\")\n\n  const [lists, setList] = useState([])\n  const [detail, setDetail] = useState({})\n  const [id, setID] = useState([])\n  const [title, setTitle] = useState([])\n\n\n  const [details, setDetails] = useState([])\n\n\n  const fetchTodoList = async () => {\n\n    try {\n      const response = await fetch(url);\n      const lists = await response.json()\n      console.log(lists)\n      setList(lists)\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchTodoList();\n  }, [App])\n\n\n\n\n\n\n\n  const fetchUserDetails = async () => {\n\n    try {\n      const response = await fetch(url_1);\n      const details = await response.json()\n      console.log(details)\n      setDetails(details)\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    fetchUserDetails();\n  }, [])\n\n\n\n\n  const info = ([userId, title, id]) => {\n    setTitle(title);\n    setID(id);\n\n    details.map((detail) => {\n\n      if (detail.id === userId) {\n        setDetail(detail);\n\n\n      }\n\n    })\n  }\n\n\n\n\n\n  function search(rows) {\n    return rows.filter((row) => row.title.toLowerCase().indexOf(q) > -1 ||\n      row.id.toString().toLowerCase().indexOf(q) > -1 ||\n      row.completed.toString().toLowerCase().indexOf(q) > -1)\n  }\n\n\n\n\n\n\n  return (\n    <div className=\"whole\">\n      <h2>ToDos</h2>\n\n      <div className=\"input\">\n\n        <SearchIcon fontSize=\"large\" style={{ color: \"white\" }} />\n        <input type=\"text\" placeholder=\"Search...\" value={q} onChange={(e) => setQ(e.target.value)} />\n      </div>\n      <div className=\"app\">\n        <ToDo lists={search(lists)} info={info} />\n        <Userdetail detail={detail} title={title} todoid={id} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}